
name: Edbook-staging
on:
  push:
    paths-ignore:
      - "**/README.md"
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  Deployment:
    if: github.event.pull_request.merged == true || github.ref != 'refs/heads/master'
    env:
      DEFAULT_BRANCH: master
    name: Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hi-cli
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      id: python_version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
    - name: Install dependencies
      id: install_dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Build
      id: build
      run: poetry run hicli build
    - name: Cleanup and deploy feature
      id: cleanup_deploy_feature
      if: ${{steps.extract_branch.outputs.branch != 'master'}}
      uses: appleboy/scp-action@master
      with:
        host: krafla.rhi.hi.is
        username: ${{ secrets.PRODUCTION_HI_USERNAME }}
        password: ${{ secrets.PRODUCTION_HI_PASSWORD }}
        port: 22
        rm: true
        source: _build
        target: ".public_html/staging/edbook/${{ steps.extract_branch.outputs.branch }}"
    - name: Cleanup and deploy production
      id: cleanup_deploy_production
      if: ${{steps.extract_branch.outputs.branch == 'master'}}
      uses: appleboy/scp-action@master
      with:
        host: krafla.rhi.hi.is
        username: ${{ secrets.PRODUCTION_HI_USERNAME }}
        password: ${{ secrets.PRODUCTION_HI_PASSWORD }}
        port: 22
        rm: true
        source: ../_build
        target: ".public_html/production/edbook/${{ steps.extract_branch.outputs.branch }}"
    - run: echo ${{github.ref}}
    - uses: actions/checkout@v2
      if: github.event.pull_request.merged == true
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      if: github.event.pull_request.merged == true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
    # - name: Upload release asset
    #   id: upload_release_asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
    #     asset_path: ./build-artifact.zip
    #     asset_name: build-artifact.zip
    #     asset_content_type: application/zip
  # Release:
  #   needs: Deployment
  #   # if: github.event.pull_request.merged == true
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: echo ${{github.ref}}
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: '0'
  #   - name: Bump version and push tag
  #     uses: anothrNick/github-tag-action@1.26.0
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       WITH_V: true