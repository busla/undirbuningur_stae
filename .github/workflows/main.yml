name: edbook
on:
  push:
    paths-ignore:
      - "**/README.md"
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  Deployment:
    if: github.event.pull_request.merged == true || github.ref != 'refs/heads/master'
    env:
      DEFAULT_BRANCH: master
    name: Deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        id: python_version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
      - name: Install dependencies
        id: install_dependencies
        run: |
          pip install -U pip poetry
          poetry install
      - name: Build
        id: buildecho
        run: |
          poetry run hicli build
          zip -r --junk-paths build.zip _build
          ls .
      - uses: actions/checkout@v2
        # if: github.event.pull_request.merged == true
        with:
          fetch-depth: "0"
      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.26.0
        # if: github.event.pull_request.merged == true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
      - name: Create Release
        id: create_release
        # if: github.event.pull_request.merged == true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: ${{ steps.bump_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        run: ls ./
        id: upload-release-asset
        # if: github.event.pull_request.merged == true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
      - name: Cleanup and deploy feature
        id: cleanup_deploy_feature
        if: ${{steps.extract_branch.outputs.branch != 'master'}}
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.PRODUCTION_HI_USERNAME }}
          password: ${{ secrets.PRODUCTION_HI_PASSWORD }}
          port: 22
          rm: true
          source: _build
          target: ".public_html/staging/edbook/${{ steps.extract_branch.outputs.branch }}"
      - name: Cleanup and deploy production
        id: cleanup_deploy_production
        if: ${{steps.extract_branch.outputs.branch == 'master'}}
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.PRODUCTION_HI_USERNAME }}
          password: ${{ secrets.PRODUCTION_HI_PASSWORD }}
          port: 22
          rm: true
          source: _build
          target: ".public_html/production/edbook/${{ steps.extract_branch.outputs.branch }}"
